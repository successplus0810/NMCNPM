{"ast":null,"code":"var _jsxFileName = \"D:\\\\khtn\\\\hk4\\\\NMCNPM\\\\NMCNPM\\\\client\\\\src\\\\components\\\\TextComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextComponent = ({\n  text\n}) => {\n  _s();\n  var _wordInfo$pronunciati;\n  const [wordInfo, setWordInfo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleWordClick = async word => {\n    setLoading(true);\n    setWordInfo(null);\n    try {\n      const cleanedWord = word.replace(/[.,/#!$%^&*;:{}=\\-_`~()]/g, \"\").toLowerCase();\n      if (!cleanedWord) {\n        setLoading(false);\n        return;\n      }\n      const response = await axios.get(`/api/vocabulary?word=${cleanedWord}`);\n      setWordInfo(response.data);\n    } catch (error) {\n      console.error('Error fetching word info:', error);\n      if (error.response && error.response.data && error.response.data.error) {\n        setWordInfo({\n          error: error.response.data.error\n        });\n      } else {\n        setWordInfo({\n          error: `Request failed for \"${cleanedWord}\". Please check your network connection.`\n        });\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const renderText = () => {\n    return text.split(/(\\s+)/).map((word, index) => {\n      if (word.trim() === '') {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: word\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 16\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => handleWordClick(word),\n        style: {\n          cursor: 'pointer',\n          color: 'blue'\n        },\n        children: word\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: renderText()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 19\n    }, this), wordInfo && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ccc',\n        padding: '10px',\n        marginTop: '10px',\n        borderRadius: '5px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Word Information:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), wordInfo.error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: wordInfo.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 30\n      }, this), wordInfo.meaning && Array.isArray(wordInfo.meaning) && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Meaning:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this), wordInfo.meaning.map((m, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"em\", {\n              children: m.partOfSpeech\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: m.definitions.map((def, j) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [def.definition, def.example && /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: '#555',\n                  fontStyle: 'italic',\n                  margin: '5px 0 0 10px'\n                },\n                children: [\"Example: \", def.example]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 41\n              }, this)]\n            }, j, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 19\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), wordInfo.pronunciation && Array.isArray(wordInfo.pronunciation) && wordInfo.pronunciation.length > 0 && wordInfo.pronunciation.find(p => p.text) && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Pronunciation:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this), \" \", (_wordInfo$pronunciati = wordInfo.pronunciation.find(p => p.text)) === null || _wordInfo$pronunciati === void 0 ? void 0 : _wordInfo$pronunciati.text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 58\n      }, this), wordInfo.translation && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Translation:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 16\n        }, this), \" \", wordInfo.translation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(TextComponent, \"cOnk13OMCy1W0guotXyLQMuKSlU=\");\n_c = TextComponent;\nexport default TextComponent;\nvar _c;\n$RefreshReg$(_c, \"TextComponent\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","TextComponent","text","_s","_wordInfo$pronunciati","wordInfo","setWordInfo","loading","setLoading","handleWordClick","word","cleanedWord","replace","toLowerCase","response","get","data","error","console","renderText","split","map","index","trim","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","cursor","color","border","padding","marginTop","borderRadius","meaning","Array","isArray","m","i","marginLeft","partOfSpeech","definitions","def","j","definition","example","fontStyle","margin","pronunciation","length","find","p","translation","_c","$RefreshReg$"],"sources":["D:/khtn/hk4/NMCNPM/NMCNPM/client/src/components/TextComponent.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst TextComponent = ({ text }) => {\r\n  const [wordInfo, setWordInfo] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleWordClick = async (word) => {\r\n    setLoading(true);\r\n    setWordInfo(null);\r\n    try {\r\n      const cleanedWord = word.replace(/[.,/#!$%^&*;:{}=\\-_`~()]/g,\"\").toLowerCase();\r\n      if (!cleanedWord) {\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      \r\n      const response = await axios.get(`/api/vocabulary?word=${cleanedWord}`);\r\n      setWordInfo(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching word info:', error);\r\n      if (error.response && error.response.data && error.response.data.error) {\r\n        setWordInfo({ error: error.response.data.error });\r\n      } else {\r\n        setWordInfo({ error: `Request failed for \"${cleanedWord}\". Please check your network connection.` });\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const renderText = () => {\r\n    return text.split(/(\\s+)/).map((word, index) => {\r\n      if (word.trim() === '') {\r\n        return <span key={index}>{word}</span>;\r\n      }\r\n      return (\r\n        <span key={index} onClick={() => handleWordClick(word)} style={{ cursor: 'pointer', color: 'blue' }}>\r\n          {word}\r\n        </span>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p>{renderText()}</p>\r\n      {loading && <p>Loading...</p>}\r\n      {wordInfo && !loading && (\r\n        <div style={{ border: '1px solid #ccc', padding: '10px', marginTop: '10px', borderRadius: '5px' }}>\r\n          <h4>Word Information:</h4>\r\n          {wordInfo.error && <p style={{ color: 'red' }}>{wordInfo.error}</p>}\r\n          {wordInfo.meaning && Array.isArray(wordInfo.meaning) && (\r\n            <div>\r\n              <strong>Meaning:</strong>\r\n              {wordInfo.meaning.map((m, i) => (\r\n                <div key={i} style={{ marginLeft: '10px' }}>\r\n                  <p><em>{m.partOfSpeech}</em></p>\r\n                  <ul>\r\n                    {m.definitions.map((def, j) => (\r\n                      <li key={j}>\r\n                        {def.definition}\r\n                        {def.example && <p style={{ color: '#555', fontStyle: 'italic', margin: '5px 0 0 10px' }}>Example: {def.example}</p>}\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n          {wordInfo.pronunciation && Array.isArray(wordInfo.pronunciation) && wordInfo.pronunciation.length > 0 &&\r\n             wordInfo.pronunciation.find(p => p.text) && <div>\r\n              <strong>Pronunciation:</strong> {wordInfo.pronunciation.find(p => p.text)?.text}\r\n            </div>\r\n          }\r\n          {wordInfo.translation && (\r\n            <p><strong>Translation:</strong> {wordInfo.translation}</p>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}