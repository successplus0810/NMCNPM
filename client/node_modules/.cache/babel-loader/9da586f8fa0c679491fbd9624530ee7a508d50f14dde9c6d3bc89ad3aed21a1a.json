{"ast":null,"code":"var _jsxFileName = \"D:\\\\khtn\\\\hk4\\\\NMCNPM\\\\NMCNPM\\\\client\\\\src\\\\components\\\\ChatInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { FaMicrophone, FaPlay, FaStop } from 'react-icons/fa';\n// Removed unused import: getChatHistory\nimport { sendMessage } from '../services/api';\nimport { initializeSpeechRecognition, initializeSpeechSynthesis } from '../utils/speechUtils';\nimport './ChatInterface.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = ({\n  userId\n}) => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const [isRecording, setIsRecording] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isSpeechSupported, setIsSpeechSupported] = useState(false);\n  const [conversationId, setConversationId] = useState(null); // Added state for conversationId\n\n  const recognition = useRef(null);\n  const synthesis = useRef(initializeSpeechSynthesis());\n  useEffect(() => {\n    recognition.current = initializeSpeechRecognition();\n    if (recognition.current) {\n      recognition.current.onresult = event => {\n        const transcript = Array.from(event.results).map(result => result[0]).map(result => result.transcript).join('');\n        setInputText(transcript);\n      };\n      recognition.current.onerror = event => {\n        console.error('Speech recognition error:', event.error);\n        setIsRecording(false);\n      };\n      setIsSpeechSupported(true);\n    }\n  }, []);\n  const handleSend = async () => {\n    if (!inputText.trim()) return;\n    const newMessage = {\n      text: inputText,\n      sender: 'user',\n      timestamp: new Date().toISOString()\n    };\n    setMessages(prev => [...prev, newMessage]);\n    setInputText('');\n    setIsLoading(true);\n    try {\n      const {\n        message\n      } = await sendMessage(inputText);\n      const aiMessage = {\n        text: message,\n        sender: 'ai',\n        timestamp: new Date().toISOString()\n      };\n      setMessages(prev => [...prev, aiMessage]);\n    } catch (error) {\n      console.error('Error:', error);\n      setMessages(prev => [...prev, {\n        text: \"I'm having trouble processing your request. Please try again.\",\n        sender: 'ai',\n        timestamp: new Date().toISOString()\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const startRecording = () => {\n    if (recognition.current) {\n      recognition.current.start();\n      setIsRecording(true);\n    }\n  };\n  const stopRecording = () => {\n    if (recognition.current) {\n      recognition.current.stop();\n      setIsRecording(false);\n    }\n  };\n  const playText = text => {\n    if (synthesis.current) {\n      setIsPlaying(true);\n      const utterance = new SpeechSynthesisUtterance(text);\n      utterance.lang = 'en-US';\n      utterance.onend = () => setIsPlaying(false);\n      synthesis.current.speak(utterance);\n    }\n  };\n  const startNewConversation = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/conversations', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId\n        }) // Ensure userId is included\n      });\n      const result = await response.json();\n      setConversationId(result.conversation_id);\n    } catch (error) {\n      console.error('Error starting new conversation:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startNewConversation,\n      children: \"Start New Conversation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), !isSpeechSupported && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"warning\",\n      children: \"Speech recognition is not supported in your browser.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sender}`,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => playText(message.text),\n          disabled: isPlaying,\n          className: \"play-button\",\n          children: isPlaying ? /*#__PURE__*/_jsxDEV(FaStop, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 28\n          }, this) : /*#__PURE__*/_jsxDEV(FaPlay, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: inputText,\n        onChange: e => setInputText(e.target.value),\n        onKeyDown: e => {\n          if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            if (inputText.trim() && !isLoading) {\n              handleSend();\n            }\n          }\n        },\n        placeholder: \"Type or speak your message...\",\n        disabled: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `record-button ${isRecording ? 'recording' : ''}`,\n          onClick: isRecording ? stopRecording : startRecording,\n          disabled: !isSpeechSupported || isLoading,\n          children: /*#__PURE__*/_jsxDEV(FaMicrophone, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          onClick: handleSend,\n          disabled: !inputText.trim() || isLoading,\n          children: isLoading ? 'Thinking...' : 'Send'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"nrJ7sNmrnVP/kUu0H0OGsCK3VLY=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useRef","useEffect","FaMicrophone","FaPlay","FaStop","sendMessage","initializeSpeechRecognition","initializeSpeechSynthesis","jsxDEV","_jsxDEV","ChatInterface","userId","_s","isLoading","setIsLoading","messages","setMessages","inputText","setInputText","isRecording","setIsRecording","isPlaying","setIsPlaying","isSpeechSupported","setIsSpeechSupported","conversationId","setConversationId","recognition","synthesis","current","onresult","event","transcript","Array","from","results","map","result","join","onerror","console","error","handleSend","trim","newMessage","text","sender","timestamp","Date","toISOString","prev","message","aiMessage","startRecording","start","stopRecording","stop","playText","utterance","SpeechSynthesisUtterance","lang","onend","speak","startNewConversation","response","fetch","method","headers","body","JSON","stringify","json","conversation_id","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","index","disabled","value","onChange","e","target","onKeyDown","key","shiftKey","preventDefault","placeholder","_c","$RefreshReg$"],"sources":["D:/khtn/hk4/NMCNPM/NMCNPM/client/src/components/ChatInterface.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { FaMicrophone, FaPlay, FaStop } from 'react-icons/fa';\r\n// Removed unused import: getChatHistory\r\nimport { sendMessage } from '../services/api';\r\nimport { initializeSpeechRecognition, initializeSpeechSynthesis } from '../utils/speechUtils';\r\nimport './ChatInterface.css';\r\n\r\nconst ChatInterface = ({ userId }) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputText, setInputText] = useState('');\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [isSpeechSupported, setIsSpeechSupported] = useState(false);\r\n  const [conversationId, setConversationId] = useState(null); // Added state for conversationId\r\n\r\n  const recognition = useRef(null);\r\n  const synthesis = useRef(initializeSpeechSynthesis());\r\n\r\n  useEffect(() => {\r\n    recognition.current = initializeSpeechRecognition();\r\n    if (recognition.current) {\r\n      recognition.current.onresult = (event) => {\r\n        const transcript = Array.from(event.results)\r\n          .map(result => result[0])\r\n          .map(result => result.transcript)\r\n          .join('');\r\n        setInputText(transcript);\r\n      };\r\n\r\n      recognition.current.onerror = (event) => {\r\n        console.error('Speech recognition error:', event.error);\r\n        setIsRecording(false);\r\n      };\r\n\r\n      setIsSpeechSupported(true);\r\n    }\r\n  }, []);\r\n\r\n  const handleSend = async () => {\r\n    if (!inputText.trim()) return;\r\n\r\n    const newMessage = {\r\n      text: inputText,\r\n      sender: 'user',\r\n      timestamp: new Date().toISOString(),\r\n    };\r\n\r\n    setMessages(prev => [...prev, newMessage]);\r\n    setInputText('');\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const { message } = await sendMessage(inputText);\r\n      const aiMessage = {\r\n        text: message,\r\n        sender: 'ai',\r\n        timestamp: new Date().toISOString(),\r\n      };\r\n      setMessages(prev => [...prev, aiMessage]);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setMessages(prev => [...prev, {\r\n        text: \"I'm having trouble processing your request. Please try again.\",\r\n        sender: 'ai',\r\n        timestamp: new Date().toISOString(),\r\n      }]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const startRecording = () => {\r\n    if (recognition.current) {\r\n      recognition.current.start();\r\n      setIsRecording(true);\r\n    }\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    if (recognition.current) {\r\n      recognition.current.stop();\r\n      setIsRecording(false);\r\n    }\r\n  };\r\n\r\n  const playText = (text) => {\r\n    if (synthesis.current) {\r\n      setIsPlaying(true);\r\n      const utterance = new SpeechSynthesisUtterance(text);\r\n      utterance.lang = 'en-US';\r\n      utterance.onend = () => setIsPlaying(false);\r\n      synthesis.current.speak(utterance);\r\n    }\r\n  };\r\n\r\n  const startNewConversation = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/conversations', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ userId }) // Ensure userId is included\r\n      });\r\n      const result = await response.json();\r\n      setConversationId(result.conversation_id);\r\n    } catch (error) {\r\n      console.error('Error starting new conversation:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={startNewConversation}>Start New Conversation</button>\r\n      {!isSpeechSupported && (\r\n        <div className=\"warning\">Speech recognition is not supported in your browser.</div>\r\n      )}\r\n      <div className=\"messages-container\">\r\n        {messages.map((message, index) => (\r\n          <div key={index} className={`message ${message.sender}`}>\r\n            <p>{message.text}</p>\r\n            <button\r\n              onClick={() => playText(message.text)}\r\n              disabled={isPlaying}\r\n              className=\"play-button\"\r\n            >\r\n              {isPlaying ? <FaStop /> : <FaPlay />}\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"input-container\">\r\n        <textarea\r\n          value={inputText}\r\n          onChange={(e) => setInputText(e.target.value)}\r\n          onKeyDown={(e) => {\r\n            if (e.key === 'Enter' && !e.shiftKey) {\r\n              e.preventDefault();\r\n              if (inputText.trim() && !isLoading) {\r\n                handleSend();\r\n              }\r\n            }\r\n          }}\r\n          placeholder=\"Type or speak your message...\"\r\n          disabled={isLoading}\r\n        />\r\n        <div className=\"button-group\">\r\n          <button\r\n            className={`record-button ${isRecording ? 'recording' : ''}`}\r\n            onClick={isRecording ? stopRecording : startRecording}\r\n            disabled={!isSpeechSupported || isLoading}\r\n          >\r\n            <FaMicrophone />\r\n          </button>\r\n          <button\r\n            className=\"send-button\"\r\n            onClick={handleSend}\r\n            disabled={!inputText.trim() || isLoading}\r\n          >\r\n            {isLoading ? 'Thinking...' : 'Send'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatInterface;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,YAAY,EAAEC,MAAM,EAAEC,MAAM,QAAQ,gBAAgB;AAC7D;AACA,SAASC,WAAW,QAAQ,iBAAiB;AAC7C,SAASC,2BAA2B,EAAEC,yBAAyB,QAAQ,sBAAsB;AAC7F,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACsB,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACwB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAAC0B,cAAc,EAAEC,iBAAiB,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE5D,MAAM4B,WAAW,GAAG3B,MAAM,CAAC,IAAI,CAAC;EAChC,MAAM4B,SAAS,GAAG5B,MAAM,CAACO,yBAAyB,CAAC,CAAC,CAAC;EAErDN,SAAS,CAAC,MAAM;IACd0B,WAAW,CAACE,OAAO,GAAGvB,2BAA2B,CAAC,CAAC;IACnD,IAAIqB,WAAW,CAACE,OAAO,EAAE;MACvBF,WAAW,CAACE,OAAO,CAACC,QAAQ,GAAIC,KAAK,IAAK;QACxC,MAAMC,UAAU,GAAGC,KAAK,CAACC,IAAI,CAACH,KAAK,CAACI,OAAO,CAAC,CACzCC,GAAG,CAACC,MAAM,IAAIA,MAAM,CAAC,CAAC,CAAC,CAAC,CACxBD,GAAG,CAACC,MAAM,IAAIA,MAAM,CAACL,UAAU,CAAC,CAChCM,IAAI,CAAC,EAAE,CAAC;QACXpB,YAAY,CAACc,UAAU,CAAC;MAC1B,CAAC;MAEDL,WAAW,CAACE,OAAO,CAACU,OAAO,GAAIR,KAAK,IAAK;QACvCS,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEV,KAAK,CAACU,KAAK,CAAC;QACvDrB,cAAc,CAAC,KAAK,CAAC;MACvB,CAAC;MAEDI,oBAAoB,CAAC,IAAI,CAAC;IAC5B;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMkB,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACzB,SAAS,CAAC0B,IAAI,CAAC,CAAC,EAAE;IAEvB,MAAMC,UAAU,GAAG;MACjBC,IAAI,EAAE5B,SAAS;MACf6B,MAAM,EAAE,MAAM;MACdC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IACpC,CAAC;IAEDjC,WAAW,CAACkC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEN,UAAU,CAAC,CAAC;IAC1C1B,YAAY,CAAC,EAAE,CAAC;IAChBJ,YAAY,CAAC,IAAI,CAAC;IAElB,IAAI;MACF,MAAM;QAAEqC;MAAQ,CAAC,GAAG,MAAM9C,WAAW,CAACY,SAAS,CAAC;MAChD,MAAMmC,SAAS,GAAG;QAChBP,IAAI,EAAEM,OAAO;QACbL,MAAM,EAAE,IAAI;QACZC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACpC,CAAC;MACDjC,WAAW,CAACkC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEE,SAAS,CAAC,CAAC;IAC3C,CAAC,CAAC,OAAOX,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BzB,WAAW,CAACkC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;QAC5BL,IAAI,EAAE,+DAA+D;QACrEC,MAAM,EAAE,IAAI;QACZC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACpC,CAAC,CAAC,CAAC;IACL,CAAC,SAAS;MACRnC,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMuC,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAI1B,WAAW,CAACE,OAAO,EAAE;MACvBF,WAAW,CAACE,OAAO,CAACyB,KAAK,CAAC,CAAC;MAC3BlC,cAAc,CAAC,IAAI,CAAC;IACtB;EACF,CAAC;EAED,MAAMmC,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAI5B,WAAW,CAACE,OAAO,EAAE;MACvBF,WAAW,CAACE,OAAO,CAAC2B,IAAI,CAAC,CAAC;MAC1BpC,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC;EAED,MAAMqC,QAAQ,GAAIZ,IAAI,IAAK;IACzB,IAAIjB,SAAS,CAACC,OAAO,EAAE;MACrBP,YAAY,CAAC,IAAI,CAAC;MAClB,MAAMoC,SAAS,GAAG,IAAIC,wBAAwB,CAACd,IAAI,CAAC;MACpDa,SAAS,CAACE,IAAI,GAAG,OAAO;MACxBF,SAAS,CAACG,KAAK,GAAG,MAAMvC,YAAY,CAAC,KAAK,CAAC;MAC3CM,SAAS,CAACC,OAAO,CAACiC,KAAK,CAACJ,SAAS,CAAC;IACpC;EACF,CAAC;EAED,MAAMK,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;QACtEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAE3D;QAAO,CAAC,CAAC,CAAC;MACnC,CAAC,CAAC;MACF,MAAM0B,MAAM,GAAG,MAAM2B,QAAQ,CAACO,IAAI,CAAC,CAAC;MACpC7C,iBAAiB,CAACW,MAAM,CAACmC,eAAe,CAAC;IAC3C,CAAC,CAAC,OAAO/B,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC1D;EACF,CAAC;EAED,oBACEhC,OAAA;IAAAgE,QAAA,gBACEhE,OAAA;MAAQiE,OAAO,EAAEX,oBAAqB;MAAAU,QAAA,EAAC;IAAsB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACrE,CAACvD,iBAAiB,iBACjBd,OAAA;MAAKsE,SAAS,EAAC,SAAS;MAAAN,QAAA,EAAC;IAAoD;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACnF,eACDrE,OAAA;MAAKsE,SAAS,EAAC,oBAAoB;MAAAN,QAAA,EAChC1D,QAAQ,CAACqB,GAAG,CAAC,CAACe,OAAO,EAAE6B,KAAK,kBAC3BvE,OAAA;QAAiBsE,SAAS,EAAE,WAAW5B,OAAO,CAACL,MAAM,EAAG;QAAA2B,QAAA,gBACtDhE,OAAA;UAAAgE,QAAA,EAAItB,OAAO,CAACN;QAAI;UAAA8B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrBrE,OAAA;UACEiE,OAAO,EAAEA,CAAA,KAAMjB,QAAQ,CAACN,OAAO,CAACN,IAAI,CAAE;UACtCoC,QAAQ,EAAE5D,SAAU;UACpB0D,SAAS,EAAC,aAAa;UAAAN,QAAA,EAEtBpD,SAAS,gBAAGZ,OAAA,CAACL,MAAM;YAAAuE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAAGrE,OAAA,CAACN,MAAM;YAAAwE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC;MAAA,GARDE,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENrE,OAAA;MAAKsE,SAAS,EAAC,iBAAiB;MAAAN,QAAA,gBAC9BhE,OAAA;QACEyE,KAAK,EAAEjE,SAAU;QACjBkE,QAAQ,EAAGC,CAAC,IAAKlE,YAAY,CAACkE,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC9CI,SAAS,EAAGF,CAAC,IAAK;UAChB,IAAIA,CAAC,CAACG,GAAG,KAAK,OAAO,IAAI,CAACH,CAAC,CAACI,QAAQ,EAAE;YACpCJ,CAAC,CAACK,cAAc,CAAC,CAAC;YAClB,IAAIxE,SAAS,CAAC0B,IAAI,CAAC,CAAC,IAAI,CAAC9B,SAAS,EAAE;cAClC6B,UAAU,CAAC,CAAC;YACd;UACF;QACF,CAAE;QACFgD,WAAW,EAAC,+BAA+B;QAC3CT,QAAQ,EAAEpE;MAAU;QAAA8D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC,eACFrE,OAAA;QAAKsE,SAAS,EAAC,cAAc;QAAAN,QAAA,gBAC3BhE,OAAA;UACEsE,SAAS,EAAE,iBAAiB5D,WAAW,GAAG,WAAW,GAAG,EAAE,EAAG;UAC7DuD,OAAO,EAAEvD,WAAW,GAAGoC,aAAa,GAAGF,cAAe;UACtD4B,QAAQ,EAAE,CAAC1D,iBAAiB,IAAIV,SAAU;UAAA4D,QAAA,eAE1ChE,OAAA,CAACP,YAAY;YAAAyE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,eACTrE,OAAA;UACEsE,SAAS,EAAC,aAAa;UACvBL,OAAO,EAAEhC,UAAW;UACpBuC,QAAQ,EAAE,CAAChE,SAAS,CAAC0B,IAAI,CAAC,CAAC,IAAI9B,SAAU;UAAA4D,QAAA,EAExC5D,SAAS,GAAG,aAAa,GAAG;QAAM;UAAA8D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClE,EAAA,CAhKIF,aAAa;AAAAiF,EAAA,GAAbjF,aAAa;AAkKnB,eAAeA,aAAa;AAAC,IAAAiF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}