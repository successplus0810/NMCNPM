{"ast":null,"code":"var _jsxFileName = \"D:\\\\khtn\\\\hk4\\\\doan2\\\\doan4\\\\src\\\\components\\\\ChatInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { FaMicrophone, FaPlay, FaStop } from 'react-icons/fa';\nimport './ChatInterface.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  // Remove the client initialization\n  const [messages, setMessages] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const [isRecording, setIsRecording] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isSpeechSupported, setIsSpeechSupported] = useState(false);\n  const recognition = useRef(null);\n  const synthesis = useRef(window.speechSynthesis);\n  useEffect(() => {\n    if ('SpeechRecognition' in window || 'webkitSpeechRecognition' in window) {\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n      recognition.current = new SpeechRecognition();\n      recognition.current.continuous = true;\n      recognition.current.interimResults = true;\n      recognition.current.lang = 'en-US';\n      recognition.current.onresult = event => {\n        const transcript = Array.from(event.results).map(result => result[0]).map(result => result.transcript).join('');\n        setInputText(transcript);\n      };\n      recognition.current.onerror = event => {\n        console.error('Speech recognition error:', event.error);\n        setIsRecording(false);\n      };\n      setIsSpeechSupported(true);\n    }\n  }, []);\n  const startRecording = () => {\n    if (recognition.current) {\n      recognition.current.start();\n      setIsRecording(true);\n    }\n  };\n  const stopRecording = () => {\n    if (recognition.current) {\n      recognition.current.stop();\n      setIsRecording(false);\n    }\n  };\n  const handleSend = async () => {\n    if (!inputText.trim()) return;\n    const newMessage = {\n      text: inputText,\n      sender: 'user',\n      timestamp: new Date().toISOString()\n    };\n    setMessages(prev => [...prev, newMessage]);\n    try {\n      const response = await getResponse(inputText);\n      const aiMessage = {\n        text: response,\n        sender: 'ai',\n        timestamp: new Date().toISOString()\n      };\n      setMessages(prev => [...prev, aiMessage]);\n    } catch (error) {\n      console.error('Error getting response:', error);\n    }\n    setInputText('');\n  };\n  const playText = text => {\n    if (synthesis.current) {\n      setIsPlaying(true);\n      const utterance = new SpeechSynthesisUtterance(text);\n      utterance.lang = 'en-US';\n      utterance.onend = () => setIsPlaying(false);\n      synthesis.current.speak(utterance);\n    }\n  };\n  const getResponse = async text => {\n    try {\n      setIsLoading(true);\n      const messages = [{\n        role: \"system\",\n        content: \"You are an English tutor helping students practice English conversation. Provide helpful, encouraging responses and correct any language mistakes.\"\n      }, {\n        role: \"user\",\n        content: text\n      }];\n\n      // Remove trailing slash from endpoint if exists\n      const endpoint = process.env.REACT_APP_AZURE_ENDPOINT.replace(/\\/$/, '');\n      const url = `${endpoint}/openai/deployments/${process.env.REACT_APP_AZURE_DEPLOYMENT_NAME}/chat/completions?api-version=2023-05-15`;\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'api-key': process.env.REACT_APP_AZURE_API_KEY\n        },\n        body: JSON.stringify({\n          messages,\n          temperature: 0.7,\n          max_tokens: 800,\n          top_p: 0.95\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error('Azure API Error:', {\n          status: response.status,\n          statusText: response.statusText,\n          error: errorData\n        });\n        throw new Error(`API error: ${response.status} - ${response.statusText}`);\n      }\n      const data = await response.json();\n      console.log('Successful response:', data);\n      return data.choices[0].message.content;\n    } catch (error) {\n      console.error('Detailed error:', error);\n      return \"I apologize, but I'm having trouble. Could you try again?\";\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Update UI to show loading state\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [!isSpeechSupported && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"warning\",\n      children: \"Speech recognition is not supported in your browser.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sender}`,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), message.sender === 'ai' && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => playText(message.text),\n          disabled: isPlaying,\n          className: \"play-button\",\n          children: isPlaying ? /*#__PURE__*/_jsxDEV(FaStop, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 30\n          }, this) : /*#__PURE__*/_jsxDEV(FaPlay, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: inputText,\n        onChange: e => setInputText(e.target.value),\n        placeholder: \"Type or speak your message...\",\n        disabled: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `record-button ${isRecording ? 'recording' : ''}`,\n          onClick: isRecording ? stopRecording : startRecording,\n          disabled: !isSpeechSupported || isLoading,\n          children: /*#__PURE__*/_jsxDEV(FaMicrophone, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          onClick: handleSend,\n          disabled: !inputText.trim() || isLoading,\n          children: isLoading ? 'Thinking...' : 'Send'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"NLcb80FkJkEXrnmVldGpANd6QkQ=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useRef","useEffect","FaMicrophone","FaPlay","FaStop","jsxDEV","_jsxDEV","ChatInterface","_s","isLoading","setIsLoading","messages","setMessages","inputText","setInputText","isRecording","setIsRecording","isPlaying","setIsPlaying","isSpeechSupported","setIsSpeechSupported","recognition","synthesis","window","speechSynthesis","SpeechRecognition","webkitSpeechRecognition","current","continuous","interimResults","lang","onresult","event","transcript","Array","from","results","map","result","join","onerror","console","error","startRecording","start","stopRecording","stop","handleSend","trim","newMessage","text","sender","timestamp","Date","toISOString","prev","response","getResponse","aiMessage","playText","utterance","SpeechSynthesisUtterance","onend","speak","role","content","endpoint","process","env","REACT_APP_AZURE_ENDPOINT","replace","url","REACT_APP_AZURE_DEPLOYMENT_NAME","fetch","method","headers","REACT_APP_AZURE_API_KEY","body","JSON","stringify","temperature","max_tokens","top_p","ok","errorData","json","status","statusText","Error","data","log","choices","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","onClick","disabled","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["D:/khtn/hk4/doan2/doan4/src/components/ChatInterface.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { FaMicrophone, FaPlay, FaStop } from 'react-icons/fa';\r\nimport './ChatInterface.css';\r\n\r\nconst ChatInterface = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  // Remove the client initialization\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputText, setInputText] = useState('');\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [isSpeechSupported, setIsSpeechSupported] = useState(false);\r\n\r\n  const recognition = useRef(null);\r\n  const synthesis = useRef(window.speechSynthesis);\r\n\r\n  useEffect(() => {\r\n    if ('SpeechRecognition' in window || 'webkitSpeechRecognition' in window) {\r\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n      recognition.current = new SpeechRecognition();\r\n      recognition.current.continuous = true;\r\n      recognition.current.interimResults = true;\r\n      recognition.current.lang = 'en-US';\r\n\r\n      recognition.current.onresult = (event) => {\r\n        const transcript = Array.from(event.results)\r\n          .map(result => result[0])\r\n          .map(result => result.transcript)\r\n          .join('');\r\n        setInputText(transcript);\r\n      };\r\n\r\n      recognition.current.onerror = (event) => {\r\n        console.error('Speech recognition error:', event.error);\r\n        setIsRecording(false);\r\n      };\r\n\r\n      setIsSpeechSupported(true);\r\n    }\r\n  }, []);\r\n\r\n  const startRecording = () => {\r\n    if (recognition.current) {\r\n      recognition.current.start();\r\n      setIsRecording(true);\r\n    }\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    if (recognition.current) {\r\n      recognition.current.stop();\r\n      setIsRecording(false);\r\n    }\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    if (!inputText.trim()) return;\r\n\r\n    const newMessage = {\r\n      text: inputText,\r\n      sender: 'user',\r\n      timestamp: new Date().toISOString(),\r\n    };\r\n\r\n    setMessages(prev => [...prev, newMessage]);\r\n\r\n    try {\r\n      const response = await getResponse(inputText);\r\n      \r\n      const aiMessage = {\r\n        text: response,\r\n        sender: 'ai',\r\n        timestamp: new Date().toISOString(),\r\n      };\r\n\r\n      setMessages(prev => [...prev, aiMessage]);\r\n    } catch (error) {\r\n      console.error('Error getting response:', error);\r\n    }\r\n\r\n    setInputText('');\r\n  };\r\n\r\n  const playText = (text) => {\r\n    if (synthesis.current) {\r\n      setIsPlaying(true);\r\n      const utterance = new SpeechSynthesisUtterance(text);\r\n      utterance.lang = 'en-US';\r\n      utterance.onend = () => setIsPlaying(false);\r\n      synthesis.current.speak(utterance);\r\n    }\r\n  };\r\n\r\n  const getResponse = async (text) => {\r\n      try {\r\n        setIsLoading(true);\r\n        const messages = [\r\n          { role: \"system\", content: \"You are an English tutor helping students practice English conversation. Provide helpful, encouraging responses and correct any language mistakes.\" },\r\n          { role: \"user\", content: text }\r\n        ];\r\n      \r\n      // Remove trailing slash from endpoint if exists\r\n      const endpoint = process.env.REACT_APP_AZURE_ENDPOINT.replace(/\\/$/, '');\r\n      const url = `${endpoint}/openai/deployments/${process.env.REACT_APP_AZURE_DEPLOYMENT_NAME}/chat/completions?api-version=2023-05-15`;\r\n      \r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'api-key': process.env.REACT_APP_AZURE_API_KEY\r\n        },\r\n        body: JSON.stringify({\r\n          messages,\r\n          temperature: 0.7,\r\n          max_tokens: 800,\r\n          top_p: 0.95,\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        console.error('Azure API Error:', {\r\n          status: response.status,\r\n          statusText: response.statusText,\r\n          error: errorData\r\n        });\r\n        throw new Error(`API error: ${response.status} - ${response.statusText}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('Successful response:', data);\r\n      return data.choices[0].message.content;\r\n    } catch (error) {\r\n      console.error('Detailed error:', error);\r\n      return \"I apologize, but I'm having trouble. Could you try again?\";\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n};\r\n\r\n  // Update UI to show loading state\r\n  return (\r\n    <div className=\"chat-container\">\r\n      {!isSpeechSupported && (\r\n        <div className=\"warning\">Speech recognition is not supported in your browser.</div>\r\n      )}\r\n      <div className=\"messages-container\">\r\n        {messages.map((message, index) => (\r\n          <div key={index} className={`message ${message.sender}`}>\r\n            <p>{message.text}</p>\r\n            {message.sender === 'ai' && (\r\n              <button \r\n                onClick={() => playText(message.text)}\r\n                disabled={isPlaying}\r\n                className=\"play-button\"\r\n              >\r\n                {isPlaying ? <FaStop /> : <FaPlay />}\r\n              </button>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      \r\n      <div className=\"input-container\">\r\n        <textarea\r\n          value={inputText}\r\n          onChange={(e) => setInputText(e.target.value)}\r\n          placeholder=\"Type or speak your message...\"\r\n          disabled={isLoading}\r\n        />\r\n        <div className=\"button-group\">\r\n          <button\r\n            className={`record-button ${isRecording ? 'recording' : ''}`}\r\n            onClick={isRecording ? stopRecording : startRecording}\r\n            disabled={!isSpeechSupported || isLoading}\r\n          >\r\n            <FaMicrophone />\r\n          </button>\r\n          <button \r\n            className=\"send-button\"\r\n            onClick={handleSend}\r\n            disabled={!inputText.trim() || isLoading}\r\n          >\r\n            {isLoading ? 'Thinking...' : 'Send'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatInterface;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}