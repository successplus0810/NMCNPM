{"ast":null,"code":"var _jsxFileName = \"D:\\\\khtn\\\\hk4\\\\doan2\\\\doan4\\\\src\\\\components\\\\ChatInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react'; // Changed to explicitly import hooks\nimport { FaMicrophone, FaPlay, FaStop } from 'react-icons/fa';\nimport { GoogleGenerativeAI } from \"@google/generative-ai\";\nimport './ChatInterface.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = () => {\n  _s();\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [messages, setMessages] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const [isRecording, setIsRecording] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isSpeechSupported, setIsSpeechSupported] = useState(false);\n  const recognition = useRef(null);\n  const synthesis = useRef(window.speechSynthesis);\n  const genAI = new GoogleGenerativeAI(\"AIzaSyDt-W_YmTQEYB7lyW2wS7c8UyFq-CyKiYE\"); // Changed constructor\n\n  useEffect(() => {\n    if ('SpeechRecognition' in window || 'webkitSpeechRecognition' in window) {\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n      recognition.current = new SpeechRecognition();\n      recognition.current.continuous = true;\n      recognition.current.interimResults = true;\n      recognition.current.lang = 'en-US';\n      recognition.current.onresult = event => {\n        const transcript = Array.from(event.results).map(result => result[0]).map(result => result.transcript).join('');\n        setInputText(transcript);\n      };\n      recognition.current.onerror = event => {\n        console.error('Speech recognition error:', event.error);\n        setIsRecording(false);\n      };\n      setIsSpeechSupported(true);\n    }\n  }, []);\n  const startRecording = () => {\n    if (recognition.current) {\n      recognition.current.start();\n      setIsRecording(true);\n    }\n  };\n  const stopRecording = () => {\n    if (recognition.current) {\n      recognition.current.stop();\n      setIsRecording(false);\n    }\n  };\n  const handleSend = async () => {\n    if (!inputText.trim()) return;\n    const newMessage = {\n      text: inputText,\n      sender: 'user',\n      timestamp: new Date().toISOString()\n    };\n    setMessages(prev => [...prev, newMessage]);\n    setInputText(''); // Clear input after sending\n\n    try {\n      const response = await getResponse(inputText);\n      const aiMessage = {\n        text: response,\n        sender: 'ai',\n        timestamp: new Date().toISOString()\n      };\n      setMessages(prev => [...prev, aiMessage]);\n    } catch (error) {\n      console.error('Error getting response:', error);\n      // Consider adding a user-friendly error message to the messages state\n      setMessages(prev => [...prev, {\n        text: \"I'm having trouble processing your request. Please try again.\",\n        sender: 'ai',\n        timestamp: new Date().toISOString()\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const playText = text => {\n    if (synthesis.current) {\n      setIsPlaying(true);\n      const utterance = new SpeechSynthesisUtterance(text);\n      utterance.lang = 'en-US';\n      utterance.onend = () => setIsPlaying(false);\n      synthesis.current.speak(utterance);\n    }\n  };\n  const getResponse = async text => {\n    try {\n      setIsLoading(true);\n      const model = genAI.getGenerativeModel({\n        model: \"gemini-2.0-flash\"\n      }); // Changed method name and model\n\n      const result = await model.generateContent({\n        contents: [{\n          role: \"model\",\n          parts: [{\n            text: `You are an English tutor. Format your analysis like this:\n\n\"Today\" is an adverb of time.\n\n\"I\" is the subject pronoun.\n\n\"wanna\" is an informal contraction of \"want to\".\n\n\"go\" is the main verb.\n\n\"to coffee store\" is an adverbial phrase of place.\n\nPlease analyze the grammar using quotation marks instead of asterisks, with one blank line between each point.`\n          }]\n        }, {\n          role: \"user\",\n          parts: [{\n            text\n          }]\n        }],\n        generationConfig: {\n          maxOutputTokens: 100,\n          temperature: 0.4\n        }\n      });\n      const response = await result.response;\n      return response.text();\n    } catch (error) {\n      console.error('Error:', error);\n      return \"I apologize, but I'm having trouble. Could you try again?\";\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [!isSpeechSupported && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"warning\",\n      children: \"Speech recognition is not supported in your browser.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sender}`,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), message.sender === 'ai' && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => playText(message.text),\n          disabled: isPlaying,\n          className: \"play-button\",\n          children: isPlaying ? /*#__PURE__*/_jsxDEV(FaStop, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 30\n          }, this) : /*#__PURE__*/_jsxDEV(FaPlay, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: inputText,\n        onChange: e => setInputText(e.target.value),\n        placeholder: \"Type or speak your message...\",\n        disabled: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `record-button ${isRecording ? 'recording' : ''}`,\n          onClick: isRecording ? stopRecording : startRecording,\n          disabled: !isSpeechSupported || isLoading,\n          children: /*#__PURE__*/_jsxDEV(FaMicrophone, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          onClick: handleSend,\n          disabled: !inputText.trim() || isLoading,\n          children: isLoading ? 'Thinking...' : 'Send'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"NLcb80FkJkEXrnmVldGpANd6QkQ=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useRef","useEffect","FaMicrophone","FaPlay","FaStop","GoogleGenerativeAI","jsxDEV","_jsxDEV","ChatInterface","_s","isLoading","setIsLoading","messages","setMessages","inputText","setInputText","isRecording","setIsRecording","isPlaying","setIsPlaying","isSpeechSupported","setIsSpeechSupported","recognition","synthesis","window","speechSynthesis","genAI","SpeechRecognition","webkitSpeechRecognition","current","continuous","interimResults","lang","onresult","event","transcript","Array","from","results","map","result","join","onerror","console","error","startRecording","start","stopRecording","stop","handleSend","trim","newMessage","text","sender","timestamp","Date","toISOString","prev","response","getResponse","aiMessage","playText","utterance","SpeechSynthesisUtterance","onend","speak","model","getGenerativeModel","generateContent","contents","role","parts","generationConfig","maxOutputTokens","temperature","className","children","fileName","_jsxFileName","lineNumber","columnNumber","message","index","onClick","disabled","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["D:/khtn/hk4/doan2/doan4/src/components/ChatInterface.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';  // Changed to explicitly import hooks\r\nimport { FaMicrophone, FaPlay, FaStop } from 'react-icons/fa';\r\nimport { GoogleGenerativeAI } from \"@google/generative-ai\";\r\nimport './ChatInterface.css';\r\n\r\nconst ChatInterface = () => {\r\n  const [isLoading, setIsLoading] = React.useState(false); \r\n  const [messages, setMessages] = useState([]);\r\n  const [inputText, setInputText] = useState('');\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [isSpeechSupported, setIsSpeechSupported] = useState(false);\r\n\r\n  const recognition = useRef(null);\r\n  const synthesis = useRef(window.speechSynthesis);\r\n  const genAI = new GoogleGenerativeAI(\"AIzaSyDt-W_YmTQEYB7lyW2wS7c8UyFq-CyKiYE\");  // Changed constructor\r\n\r\n  useEffect(() => {\r\n    if ('SpeechRecognition' in window || 'webkitSpeechRecognition' in window) {\r\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n      recognition.current = new SpeechRecognition();\r\n      recognition.current.continuous = true;\r\n      recognition.current.interimResults = true;\r\n      recognition.current.lang = 'en-US';\r\n\r\n      recognition.current.onresult = (event) => {\r\n        const transcript = Array.from(event.results)\r\n          .map(result => result[0])\r\n          .map(result => result.transcript)\r\n          .join('');\r\n        setInputText(transcript);\r\n      };\r\n\r\n      recognition.current.onerror = (event) => {\r\n        console.error('Speech recognition error:', event.error);\r\n        setIsRecording(false);\r\n      };\r\n\r\n      setIsSpeechSupported(true);\r\n    }\r\n  }, []);\r\n\r\n  const startRecording = () => {\r\n    if (recognition.current) {\r\n      recognition.current.start();\r\n      setIsRecording(true);\r\n    }\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    if (recognition.current) {\r\n      recognition.current.stop();\r\n      setIsRecording(false);\r\n    }\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    if (!inputText.trim()) return;\r\n\r\n    const newMessage = {\r\n      text: inputText,\r\n      sender: 'user',\r\n      timestamp: new Date().toISOString(),\r\n    };\r\n\r\n    setMessages(prev => [...prev, newMessage]);\r\n    setInputText(''); // Clear input after sending\r\n\r\n    try {\r\n      const response = await getResponse(inputText);\r\n      const aiMessage = {\r\n        text: response,\r\n        sender: 'ai',\r\n        timestamp: new Date().toISOString(),\r\n      };\r\n      setMessages(prev => [...prev, aiMessage]);\r\n    } catch (error) {\r\n      console.error('Error getting response:', error);\r\n      // Consider adding a user-friendly error message to the messages state\r\n      setMessages(prev => [...prev, {\r\n        text: \"I'm having trouble processing your request. Please try again.\",\r\n        sender: 'ai',\r\n        timestamp: new Date().toISOString(),\r\n      }]);\r\n\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const playText = (text) => {\r\n    if (synthesis.current) {\r\n      setIsPlaying(true);\r\n      const utterance = new SpeechSynthesisUtterance(text);\r\n      utterance.lang = 'en-US';\r\n      utterance.onend = () => setIsPlaying(false);\r\n      synthesis.current.speak(utterance);\r\n    }\r\n  };\r\n\r\n  const getResponse = async (text) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const model = genAI.getGenerativeModel({ model: \"gemini-2.0-flash\" });  // Changed method name and model\r\n\r\n      const result = await model.generateContent({\r\n        contents: [\r\n          {\r\n            role: \"model\",\r\n            parts: [{ text: `You are an English tutor. Format your analysis like this:\r\n\r\n\"Today\" is an adverb of time.\r\n\r\n\"I\" is the subject pronoun.\r\n\r\n\"wanna\" is an informal contraction of \"want to\".\r\n\r\n\"go\" is the main verb.\r\n\r\n\"to coffee store\" is an adverbial phrase of place.\r\n\r\nPlease analyze the grammar using quotation marks instead of asterisks, with one blank line between each point.` }]\r\n          },\r\n          {\r\n            role: \"user\",\r\n            parts: [{ text }]\r\n          }\r\n        ],\r\n        generationConfig: {\r\n          maxOutputTokens: 100,\r\n          temperature: 0.4\r\n        }\r\n      });\r\n\r\n      const response = await result.response;\r\n      return response.text();\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      return \"I apologize, but I'm having trouble. Could you try again?\";\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      {!isSpeechSupported && (\r\n        <div className=\"warning\">Speech recognition is not supported in your browser.</div>\r\n      )}\r\n      <div className=\"messages-container\">\r\n        {messages.map((message, index) => (\r\n          <div key={index} className={`message ${message.sender}`}>\r\n            <p>{message.text}</p>\r\n            {message.sender === 'ai' && (\r\n              <button\r\n                onClick={() => playText(message.text)}\r\n                disabled={isPlaying}\r\n                className=\"play-button\"\r\n              >\r\n                {isPlaying ? <FaStop /> : <FaPlay />}\r\n              </button>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"input-container\">\r\n        <textarea\r\n          value={inputText}\r\n          onChange={(e) => setInputText(e.target.value)}\r\n          placeholder=\"Type or speak your message...\"\r\n          disabled={isLoading}\r\n        />\r\n        <div className=\"button-group\">\r\n          <button\r\n            className={`record-button ${isRecording ? 'recording' : ''}`}\r\n            onClick={isRecording ? stopRecording : startRecording}\r\n            disabled={!isSpeechSupported || isLoading}\r\n          >\r\n            <FaMicrophone />\r\n          </button>\r\n          <button\r\n            className=\"send-button\"\r\n            onClick={handleSend}\r\n            disabled={!inputText.trim() || isLoading}\r\n          >\r\n            {isLoading ? 'Thinking...' : 'Send'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatInterface;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}